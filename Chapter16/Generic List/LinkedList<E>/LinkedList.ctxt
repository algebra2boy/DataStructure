#BlueJ class context
comment0.target=LinkedList
comment1.params=
comment1.target=LinkedList()
comment10.params=index
comment10.target=void\ remove(int)
comment11.params=list
comment11.target=void\ removeAll(LinkedList)
comment12.params=o
comment12.target=boolean\ remove(java.lang.Object)
comment13.params=list
comment13.target=boolean\ containsAll(LinkedList)
comment14.params=list
comment14.target=void\ retainAll(LinkedList)
comment15.params=index
comment15.target=ListNode\ nodeAt(int)
comment16.params=value
comment16.target=int\ indexOf(java.lang.Object)
comment17.params=index\ value
comment17.target=void\ set(int,\ java.lang.Object)
comment18.params=o
comment18.target=boolean\ equals(java.lang.Object)
comment19.params=o
comment19.target=int\ lastIndexOf(java.lang.Object)
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=public\ class\ LinkedListIterator<E>\ implements\ Iterator<E>\n\ \ \ \ {\n\ \ \ \ private\ ListNode<E>\ current;\n\ \ \ \ private\ boolean\ removeOK;\n\ \ \ \ public\ LinkedListIterator(){\n\ \ \ \ current\ \=\ head.getNext();\n\ \ \ \ removeOK\ \=\ false;\n\ \ \ \ }\n\n\ \ \ \ public\ LinkedListIterator(LinkedList\ list){\n\ \ \ \ current\ \=\ list.getHead().getNext();\n\ \ \ \ removeOK\ \=\ false;\n\ \ \ \ }\n\n\ \ \ \ public\ boolean\ hasNext(){\n\ \ \ \ return\ current\ \!\=\ tail;\n\ \ \ \ }\n\n\ \ \ \ public\ E\ next(){\n\ \ \ \ if(\!\ hasNext()){\ //\ no\ more\ elements\n\ \ \ \ throw\ new\ NoSuchElementException();\n\ \ \ \ }\n\ \ \ \ E\ result\ \=\ current.getData();\n\ \ \ \ current\ \=\ current.getNext();\n\ \ \ \ removeOK\ \=\ true;\n\ \ \ \ return\ result;\n\ \ \ \ }\n\n\ \ \ \ public\ void\ remove(){\n\ \ \ \ if(\!removeOK){\n\ \ \ \ throw\ new\ IllegalStateException();\n\ \ \ \ }\n\ \ \ \ ListNode<E>\ prev2\ \=\ current.getPrev().getPrev();\n\ \ \ \ prev2.setNext(current);\n\ \ \ \ current.setPrev(prev2);\n\ \ \ \ size--;\n\ \ \ \ removeOK\ \=\ false;\n\ \ \ \ }\n\ \ \ \ }\n\ \ \ \ public\ LinkedListIterator<E>\ listIterator(){\n\ \ \ \ return\ new\ LinkedListIterator<E>(this);\n}
comment20.params=
comment20.target=java.lang.Object[]\ toArray()
comment3.params=
comment3.target=ListNode\ getHead()
comment4.params=
comment4.target=int\ size()
comment5.params=
comment5.target=void\ clear()
comment6.params=index
comment6.target=java.lang.Object\ get(int)
comment7.params=data
comment7.target=void\ add(java.lang.Object)
comment8.params=index\ value
comment8.target=void\ add(int,\ java.lang.Object)
comment9.params=index\ list
comment9.target=void\ addAll(int,\ LinkedList)
numComments=21
