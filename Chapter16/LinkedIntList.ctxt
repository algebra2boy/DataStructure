#BlueJ class context
comment0.target=LinkedIntList
comment1.params=
comment1.target=LinkedIntList()
comment10.params=index
comment10.target=void\ remove(int)
comment11.params=index
comment11.target=ListNode\ nodeAt(int)
comment11.text=\n\ \ \ \ public\ int\ get(int\ index){\n\ \ \ \ ListNode\ current\ \=\ front;\n\ \ \ \ for(int\ i\ \=\ 0;\ i\ <\ index;\ i++){\n\ \ \ \ current\ \=\ current.next;\n\ \ \ \ }\n\ \ \ \ return\ current.data;\n}
comment12.params=value
comment12.target=int\ indexOf(int)
comment13.params=value
comment13.target=void\ addSorted(int)
comment14.params=
comment14.target=int\ min()
comment15.params=
comment15.target=int\ max()
comment16.params=index\ value
comment16.target=void\ set(int,\ int)
comment17.params=
comment17.target=boolean\ isSorted()
comment18.params=value
comment18.target=int\ lastIndexOf(int)
comment19.params=
comment19.target=int\ countDuplicates()
comment2.params=arrayInt
comment2.target=LinkedIntList(int[])
comment20.params=
comment20.target=boolean\ hasTwoConsecutive()
comment21.params=
comment21.target=int\ deleteBack()
comment22.params=
comment22.target=void\ stutter()
comment23.params=value
comment23.target=void\ stretch(int)
comment24.params=
comment24.target=void\ compress()
comment25.params=value
comment25.target=void\ removeAll(int)
comment26.params=list2
comment26.target=boolean\ equals(LinkedIntList)
comment27.params=start\ end
comment27.target=void\ removeRange(int,\ int)
comment28.params=list2
comment28.target=void\ transferForm(LinkedIntList)
comment28.text=public\ void\ switchPairs(){\n\ \ \ \ \ \ \ \ if(front\ \=\=\ null\ ||\ front.next\ \=\=\ null){\ //\ empty\ or\ a\ single\ node\n\ \ \ \ \ \ \ \ \ \ \ \ return;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ ListNode\ curr\ \=\ front;\n\ \ \ \ \ \ \ \ ListNode\ first\ \=\ curr;\n\ \ \ \ \ \ \ \ ListNode\ second\ \=\ curr.next;\n\ \ \ \ \ \ \ \ first.next\ \=\ second.next;\n\ \ \ \ \ \ \ \ second.next\ \=\ first;\n\ \ \ \ \ \ \ \ curr\ \=\ first;\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ while(curr.next\ \!\=\ null\ &&\ curr.next.next\ \!\=\ null){\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ }\n}
comment29.params=
comment29.target=void\ split()
comment3.params=
comment3.target=java.lang.String\ toString()
comment30.params=
comment30.target=void\ doubleList()
comment31.params=
comment31.target=void\ rotate()
comment32.params=
comment32.target=void\ shift()
comment4.params=
comment4.target=double\ sum()
comment5.params=
comment5.target=double\ average()
comment6.params=
comment6.target=int\ size()
comment7.params=index
comment7.target=int\ get(int)
comment8.params=data
comment8.target=void\ add(int)
comment9.params=index\ value
comment9.target=void\ add(int,\ int)
numComments=33
